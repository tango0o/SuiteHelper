# TestNG Listener, Single Instance mode, Parallel mode
TestNG_Listener=com.teradata.framework.TestNGListener
Is_Single_Instance=true
Is_Parallel=false

# search filter base dictionary as if only simple-class-name, method-name, 
# it will grunt nodes by searching *.java from workspace-project folder level by level.
#Base_Dir_Path=D:\\Teradata\\Workspace_trm\\trunk-trm-automation-1016\\src\\test\\java
Base_Dir_Path=/home/tango/Trigon-Solutions/Eclipse-Workspace/trunk-trm-automation-1119/src/test/java

# beginning folder of full java packagers, which is last folder of base dictionary.
# search folders level, defined as 20+
Beigin_Folder_Name=java
Max_Folder_Levels=20

# File Format: txt, csv | xls within 97-2003, NOT 2007+
# the application will reading these line data with fixed format, e.g
# 	 com.teradata.trm.test.CIMCommonTest testCommonLogin
# 	 com.teradata.trm.test.CIMCommonTest testCommonLoginOut
# OR CIMCommonXXXXXTest testCommonLogin
# simple mode will search full-package-class-name from folder level by level.
# as if you have index.csv file, it will reading grid cells including 
# 	TestCase-full-name | TestMethod | Status (PASSED, FAIL, SKIP)
# e.g file extension: txt, xls, csv.
# Notice: Package, Class, Method (Test Name), Result
Extract_File_Path=/home/tango/a.txt
#Extract_File_Path=C:\\index.xls

# Filte required Result-status
# Status: PASS, FAIL, SKIP
Filte_Result_Status=FAIL

# Output file path, file name be done automately.
# e.g TestNg-20151022-354.xml
Output_Xml_Path=/home/tango/Documents/

